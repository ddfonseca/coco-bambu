{"version":3,"mappings":"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","names":["e","webpackEmptyAsyncContext","module","routes","path","component","_pages_signin_signin_component__WEBPACK_IMPORTED_MODULE_3__","_pages_last_order_last_order_component__WEBPACK_IMPORTED_MODULE_0__","_pages_recipes_recipes_component__WEBPACK_IMPORTED_MODULE_2__","_pages_recipe_detail_recipe_detail_component__WEBPACK_IMPORTED_MODULE_1__","AppRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_5__","imports","exports","AppComponent","selectors","decls","vars","template","_angular_core__WEBPACK_IMPORTED_MODULE_0__","AppModule","bootstrap","_app_component__WEBPACK_IMPORTED_MODULE_1__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_11__","_app_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_12__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_13__","_angular_forms__WEBPACK_IMPORTED_MODULE_14__","_angular_common_http__WEBPACK_IMPORTED_MODULE_15__","declarations","_components_header_header_component__WEBPACK_IMPORTED_MODULE_2__","_components_login_login_component__WEBPACK_IMPORTED_MODULE_3__","_pages_signin_signin_component__WEBPACK_IMPORTED_MODULE_4__","_pages_last_order_last_order_component__WEBPACK_IMPORTED_MODULE_5__","_components_recipe_list_recipe_list_component__WEBPACK_IMPORTED_MODULE_6__","_pages_recipes_recipes_component__WEBPACK_IMPORTED_MODULE_7__","_pages_recipe_detail_recipe_detail_component__WEBPACK_IMPORTED_MODULE_8__","_components_modal_modal_component__WEBPACK_IMPORTED_MODULE_9__","HeaderComponent","recipeService","setSearch","search","_angular_core__WEBPACK_IMPORTED_MODULE_1__","consts","ctx","LoginComponent","router","username","password","form","submitted","value","valid","navigate","ModalComponent","showModal","showModalChange","emit","inputs","minutes","seconds","outputs","_angular_core__WEBPACK_IMPORTED_MODULE_2__","BACKEND_URL","environments_environment__WEBPACK_IMPORTED_MODULE_0__","RecipeListComponent","rxjs__WEBPACK_IMPORTED_MODULE_3__","getRecipes","recipeSub","getRecipesListener","subscribe","recipes","frecipes","searchSub","getSearchListener","filterRecipes","unsubscribe","filter","name","toLowerCase","includes","length","RecipeService","http","rxjs__WEBPACK_IMPORTED_MODULE_1__","get","recipesUpdated","next","asObservable","_slug","toPromise","factory","providedIn","LastOrderComponent","i0","ctx_r0","Choice","environment","RecipeDetailComponent","constructor","route","Date","currentTime","difference","getTime","timeReference","Math","floor","clearInterval","interval","ngOnInit","_this","slug","snapshot","params","getRecipeBySlug","recipe","Object","time","selectedIngredients","fillArray","ingredients","selectedSteps","steps","Array","fill","idx","selected","map","_","id","String","onChangeItems","$event","target","isChecked","checked","findItem","find","item","checkedIngredients","verifyAllItems","ingredient","status","onChangeStatus","checkedSteps","step","items","total","reduce","acc","round","choice","every","startTime","setInterval","updateTime","showButton","onModalChanged","RecipesComponent","SigninComponent","production","apiUrl","_environments_environment__WEBPACK_IMPORTED_MODULE_1__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__","bootstrapModule","_app_app_module__WEBPACK_IMPORTED_MODULE_0__","console","error","err"],"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions:%20%7B%7D|namespace%20object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/modal/modal.component.html","webpack:///src/app/components/modal/modal.component.ts","webpack:///src/app/components/recipe-list/recipe-list.component.html","webpack:///src/app/components/recipe-list/recipe-list.component.ts","webpack:///src/app/core/services/recipe.service.ts","webpack:///src/app/pages/last-order/last-order.component.ts","webpack:///src/app/pages/last-order/last-order.component.html","webpack:///src/app/pages/recipe-detail/recipe-detail.component.html","webpack:///src/app/pages/recipe-detail/recipe-detail.component.ts","webpack:///src/app/pages/recipes/recipes.component.ts","webpack:///src/app/pages/recipes/recipes.component.html","webpack:///src/app/pages/signin/signin.component.ts","webpack:///src/app/pages/signin/signin.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LastOrderComponent } from './pages/last-order/last-order.component';\nimport { RecipeDetailComponent } from './pages/recipe-detail/recipe-detail.component';\nimport { RecipesComponent } from './pages/recipes/recipes.component';\nimport { SigninComponent } from './pages/signin/signin.component';\n\nconst routes: Routes = [\n  { path: '', component: SigninComponent },\n  { path: 'pedidos', component: LastOrderComponent },\n  { path: 'receitas', component: RecipesComponent },\n  { path: 'receitas/:slug', component: RecipeDetailComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend-v2';\n}\n","<!-- <mat-icon>data_usage</mat-icon> -->\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HeaderComponent } from './components/header/header.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { LastOrderComponent } from './pages/last-order/last-order.component';\nimport { RecipeListComponent } from './components/recipe-list/recipe-list.component';\nimport { RecipesComponent } from './pages/recipes/recipes.component';\nimport { RecipeDetailComponent } from './pages/recipe-detail/recipe-detail.component';\nimport { ModalComponent } from './components/modal/modal.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LoginComponent,\n    SigninComponent,\n    LastOrderComponent,\n    RecipeListComponent,\n    RecipesComponent,\n    RecipeDetailComponent,\n    ModalComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { RecipeService } from '@core/services/recipe.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit {\n  search: string = '';\n  imgSrc: string = '../../assets/img/logo-coco-bambu-mini.png';\n\n  constructor(private recipeService: RecipeService) {}\n\n  ngOnInit(): void {\n    // this.search = this.recipeService.getSearch();\n  }\n\n  onChangeInput() {\n    this.recipeService.setSearch(this.search);\n  }\n}\n","<div class=\"container\">\n  <header>\n    <img [src]=\"imgSrc\" alt=\"Logo coco bambu\" />\n    <form (submit)=\"onChangeInput()\">\n      <input\n        type=\"text\"\n        class=\"search\"\n        name=\"searchRecipes\"\n        placeholder=\"Buscar receita...\"\n        [(ngModel)]=\"search\"\n        (input)=\"onChangeInput()\"\n      />\n    </form>\n    <h1></h1>\n    <nav>\n      <ul>\n        <li>\n          <a routerLink=\"/pedidos\" routerLinkActive=\"active\">\n            <mat-icon>data_usage</mat-icon>\n            Pedidos\n          </a>\n        </li>\n        <li>\n          <a routerLink=\"/receitas\" routerLinkActive=\"active\">\n            <mat-icon>restaurant_menu </mat-icon>\n            Receitas\n          </a>\n        </li>\n        <li>\n          <a routerLink=\"/\">\n            <mat-icon>clear</mat-icon>\n            Sair\n          </a>\n        </li>\n      </ul>\n    </nav>\n  </header>\n</div>\n<br />\n","<main>\n  <div class=\"container\">\n    <section class=\"notification\">\n      <div class=\"order\">\n        <span class=\"number\">1</span>\n        <span class=\"number--message\">Novo pedido</span>\n      </div>\n      <span class=\"info-message\">\n        Por favor, faça o login para ver o pedido e ter acesso a receita com o\n        modo de preparo.\n      </span>\n    </section>\n    <div class=\"logo\">\n      <img src=\"../../../assets/img/logo-coco-bambu.png\" alt=\"\" />\n    </div>\n    <form (ngSubmit)=\"onLoginSubmit(loginForm)\" #loginForm=\"ngForm\">\n      <input\n        type=\"text\"\n        id=\"username\"\n        placeholder=\"Nome do usuário\"\n        ngModel\n        name=\"username\"\n        #username=\"ngModel\"\n        required\n        (input)=\"onChangeInput()\"\n      />\n\n      <span\n        class=\"error\"\n        *ngIf=\"username.invalid && (username.dirty || username.touched)\"\n        >{{ \"Por favor, entre com um usuário.\" }}</span\n      >\n\n      <span class=\"error\" *ngIf=\"!valid.username\">{{\n        \"Usuário incorreto.\"\n      }}</span>\n\n      <input\n        type=\"password\"\n        id=\"password\"\n        placeholder=\"Senha\"\n        required\n        ngModel\n        name=\"password\"\n        #password=\"ngModel\"\n      />\n      <span\n        class=\"error\"\n        *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n        >{{ \"Por favor, entre com uma senha.\" }}</span\n      >\n      <button type=\"submit\" [disabled]=\"!loginForm.valid\">Acessar</button>\n    </form>\n  </div>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  submitted: boolean = false;\n  valid: { username: boolean; password: boolean } = {\n    username: true,\n    password: true,\n  };\n\n  constructor(private router: Router) {}\n\n  onLoginSubmit(form: NgForm): void {\n    this.submitted = true;\n    const username = form.value.username;\n    const password = form.value.password;\n    // console.log(form);\n    if (username !== 'admin') {\n      this.valid.username = false;\n    }\n    if (password !== 'admin') {\n      this.valid.password = false;\n    }\n    if (username === 'admin' && password === 'admin') {\n      this.router.navigate(['pedidos']);\n    }\n  }\n\n  onChangeInput(): void {\n    this.valid.username = true;\n    this.valid.password = true;\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"modal-container\" *ngIf=\"showModal\">\n  <div class=\"modal\">\n    <h3>Obrigado</h3>\n    <p>\n      Prato finalizado com sucesso <br />\n      em {{ minutes }} minutos e {{ seconds }} segundos!\n    </p>\n    <div (click)=\"closeModal()\" class=\"X-button\">\n      <img src=\"../../../assets/img/icon-close.png\" alt=\"\" srcset=\"\" />\n    </div>\n\n    <button (click)=\"closeModal()\">Ok</button>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css'],\n})\nexport class ModalComponent implements OnInit {\n  @Input()\n  minutes = 0;\n\n  @Input()\n  seconds = 0;\n\n  @Input()\n  showModal = false;\n\n  @Output()\n  showModalChange = new EventEmitter<boolean>();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  closeModal = (): void => {\n    this.showModal = false;\n    this.showModalChange.emit(this.showModal);\n  };\n}\n","<!-- <section *ngFor=\"let recipe of recipes\" class=\"wrapper\"> -->\n\n<a\n    [routerLink]=\"['/receitas', recipe.slug]\"\n    class=\"wrapper\"\n    *ngFor=\"let recipe of frecipes\"\n>\n    <div class=\"img\">\n        <img src=\"{{ BACKEND_URL }}/{{ recipe.pictures.thumb }}\" alt=\"Imagem\" />\n        <!-- Imagem <img src=\"../../assets/img/prato-arroz-\" alt=\"\" /> -->\n    </div>\n    <div class=\"\">\n        <h1 class=\"title\">{{ recipe.name }}</h1>\n        <p class=\"description\">\n            {{ recipe.description }}\n        </p>\n    </div>\n    <div class=\"circle prato\" *ngIf=\"recipe.finished\">Prato Finalizado</div>\n    <div class=\"circle prato\" *ngIf=\"!recipe.finished\"></div>\n    <div class=\"circle tempo\">\n        <span>Hoje</span>\n        <span>19:32</span>\n    </div>\n    <div class=\"circle receita\">\n        <span>Ver</span>\n        <span>Receita</span>\n    </div>\n</a>\n<!-- </section> -->\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core'\nimport { RecipeService } from '@core/services/recipe.service'\nimport { environment } from 'environments/environment'\nimport { Subscription } from 'rxjs'\nimport { Recipe } from './recipe.model'\n\nconst BACKEND_URL = environment.apiUrl\n\n@Component({\n    selector: 'app-recipe-list',\n    templateUrl: './recipe-list.component.html',\n    styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit, OnDestroy {\n    BACKEND_URL = BACKEND_URL\n    private searchSub: Subscription = new Subscription()\n    private recipeSub: Subscription = new Subscription()\n    recipes: Recipe[] = []\n    frecipes: Recipe[] = []\n    constructor(private recipeService: RecipeService) {}\n\n    ngOnInit(): void {\n        this.recipeService.getRecipes()\n        this.recipeSub = this.recipeService\n            .getRecipesListener()\n            .subscribe((recipes: Recipe[]) => {\n                this.recipes = recipes\n                this.frecipes = recipes\n            })\n\n        this.searchSub = this.recipeService\n            .getSearchListener()\n            .subscribe((search: string) => {\n                this.filterRecipes(search)\n            })\n    }\n\n    ngOnDestroy(): void {\n        this.searchSub.unsubscribe()\n        this.recipeSub.unsubscribe()\n    }\n\n    filterRecipes(search: string) {\n        this.frecipes = this.recipes.filter(({ name }) =>\n            name.toLowerCase().includes(search)\n        )\n    }\n\n    getLengthFilteredRecipes() {\n        return this.recipes.length\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { Recipe } from 'app/components/recipe-list/recipe.model'\nimport { Subject } from 'rxjs'\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from 'environments/environment'\n\nconst BACKEND_URL = environment.apiUrl\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RecipeService {\n    private recipes: Recipe[] = []\n    // private recipe: Recipe = {}\n    private recipesUpdated = new Subject<Recipe[]>()\n    private search = new Subject<string>()\n\n    constructor(private http: HttpClient) {}\n\n    getRecipes() {\n        this.http\n            .get<Recipe[]>(`${BACKEND_URL}/recipes`)\n            .subscribe((recipes) => {\n                this.recipes = recipes\n                this.recipesUpdated.next([...this.recipes])\n            })\n    }\n\n    getRecipesListener() {\n        return this.recipesUpdated.asObservable()\n    }\n\n    getLength() {\n        return this.recipes.length\n    }\n\n    setSearch(search: string) {\n        this.search.next(search)\n    }\n\n    getSearchListener() {\n        return this.search.asObservable()\n    }\n\n    getRecipeBySlug(_slug: string) {\n        return this.http\n            .get<Recipe>(`${BACKEND_URL}/recipes/${_slug}`)\n            .toPromise()\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Event } from '@angular/router';\n\n@Component({\n  selector: 'app-last-order',\n  templateUrl: './last-order.component.html',\n  styleUrls: ['./last-order.component.css'],\n})\nexport class LastOrderComponent implements OnInit {\n  search = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onSearchRecipes(search: any) {\n    this.search = search;\n  }\n}\n","<app-header></app-header>\n\n<div class=\"container\">\n  <h1>Últimos pedidos</h1>\n  <app-recipe-list></app-recipe-list>\n</div>\n","<main class=\"container\" *ngIf=\"recipe\">\n    <section class=\"hero\">\n        <a routerLink=\"/pedidos\">\n            <div class=\"goBack\">\n                <img src=\"../../assets/img/icon-back.png\" alt=\"\" />\n                <span class=\"goBack--text\">Voltar</span>\n            </div>\n        </a>\n\n        <div class=\"tempoDePreparo\">\n            <img src=\"../../assets/img/icon-time.png\" alt=\"\" />\n            <div class=\"tempoDePreparo--info\">\n                <p>Tempo de preparo</p>\n                <span class=\"tempoDePreparo--time\"\n                    >{{ recipe.time }} minutos</span\n                >\n            </div>\n        </div>\n        <img\n            src=\"{{ BACKEND_URL }}/{{ recipe.pictures.hero }}\"\n            alt=\"{{ recipe.name }}\"\n        />\n        <div class=\"info\">\n            <h1>{{ recipe.name }}</h1>\n            <p>{{ recipe.description }}</p>\n        </div>\n    </section>\n\n    <section class=\"ingredients\">\n        <h1>Ingredientes</h1>\n        <ul class=\"ingredients--list\">\n            <ng-container\n                *ngFor=\"let ingredient of recipe.ingredients; index as idx\"\n            >\n                <li class=\"ingredients--list-item\">\n                    <input\n                        class=\"checkbox-circle\"\n                        type=\"checkbox\"\n                        [value]=\"idx\"\n                        id=\"ingredient_{{ idx }}\"\n                        (change)=\"onChangeItems($event)\"\n                    />\n                    <label class=\"checkbox-label\" for=\"ingredient_{{ idx }}\">\n                        {{ ingredient }}\n                    </label>\n                </li>\n            </ng-container>\n        </ul>\n    </section>\n\n    <section class=\"modo-de-preparo\">\n        <h1>Modo de Preparo</h1>\n        <ol class=\"modo-de-preparo--list\">\n            <ng-container *ngFor=\"let step of recipe.steps; index as idx\">\n                <li class=\"modo-de-preparo--list-item\">\n                    <input\n                        class=\"checkbox-circle\"\n                        type=\"checkbox\"\n                        [value]=\"idx\"\n                        id=\"step_{{ idx }}\"\n                        (change)=\"onChangeItems($event)\"\n                    />\n                    <label class=\"checkbox-label row\" for=\"step_{{ idx }}\">\n                        <div>\n                            <strong>Passo {{ idx + 1 }}</strong>\n                            <br />\n                            {{ step }}\n                        </div>\n                    </label>\n                </li>\n            </ng-container>\n        </ol>\n    </section>\n\n    <footer>\n        <div class=\"status\">\n            Status <strong>{{ status }}%</strong> pronto e <br />\n            {{ minutes }} minuto(s) {{ seconds }} segundo(s) utilizado(s)\n        </div>\n        <ng-container *ngIf=\"showButton\">\n            <button [disabled]=\"!checkedIngredients\" (click)=\"startTime()\">\n                Iniciar Preparação\n            </button>\n        </ng-container>\n\n        <ng-container *ngIf=\"!showButton\">\n            <button [disabled]=\"!checkedSteps\" (click)=\"endTime()\">\n                Finalizar\n            </button>\n        </ng-container>\n    </footer>\n\n    <app-modal\n        [minutes]=\"minutes\"\n        [seconds]=\"seconds\"\n        [showModal]=\"showModal\"\n        (showModalChange)=\"onModalChanged($event)\"\n    ></app-modal>\n</main>\n","import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { RecipeService } from '@core/services/recipe.service'\nimport { Recipe } from 'app/components/recipe-list/recipe.model'\nimport { environment } from 'environments/environment'\n\ninterface SelectedItems {\n    id: string\n    selected: boolean\n}\n\nenum Choice {\n    ingredient,\n    step\n}\n\nconst BACKEND_URL = environment.apiUrl\n\n@Component({\n    selector: 'app-recipe-detail',\n    templateUrl: './recipe-detail.component.html',\n    styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n    BACKEND_URL = BACKEND_URL\n    recipe: Recipe\n    selectedIngredients: SelectedItems[] = []\n    selectedSteps: SelectedItems[] = []\n    checkedIngredients = false\n    checkedSteps = false\n    showButton = true\n    timeReference = new Date()\n    interval\n    minutes = 0\n    seconds = 0\n    showModal = false\n    status = 0\n    constructor(\n        private recipeService: RecipeService,\n        private route: ActivatedRoute\n    ) {}\n\n    async ngOnInit() {\n        this.recipeService.getRecipes()\n        const slug = this.route.snapshot.params.slug\n        this.recipe = await this.recipeService.getRecipeBySlug(slug)\n        this.recipe = {\n            ...this.recipe,\n            time: this.recipe.time / 60000\n        }\n        this.selectedIngredients = this.fillArray(\n            this.recipe.ingredients.length\n        )\n        this.selectedSteps = this.fillArray(this.recipe.steps.length)\n    }\n\n    private fillArray(length: number) {\n        return Array(length)\n            .fill({ idx: '0', selected: false })\n            .map((_, idx) => ({ id: String(idx), selected: false }))\n    }\n\n    onChangeItems($event) {\n        const id = $event.target.value\n        const isChecked = $event.target.checked\n        let findItem\n        if ($event.target.id.includes('ingredient')) {\n            findItem = this.selectedIngredients.find((item) => item.id === id)\n            findItem.selected = isChecked\n            this.checkedIngredients = this.verifyAllItems(Choice.ingredient)\n        } else {\n            findItem = this.selectedSteps.find((item) => item.id === id)\n            findItem.selected = isChecked\n            this.status = this.onChangeStatus(this.selectedSteps)\n            this.checkedSteps = this.verifyAllItems(Choice.step)\n        }\n    }\n\n    private onChangeStatus(items: SelectedItems[]) {\n        const total = items.reduce((acc, item) => {\n            if (item.selected) {\n                acc++\n            }\n            return acc\n        }, 0)\n        return Math.round((total / items.length) * 100)\n    }\n\n    verifyAllItems(choice: Choice): boolean {\n        switch (choice) {\n            case Choice.ingredient:\n                return this.selectedIngredients.every(\n                    (item) => item.selected === true\n                )\n            case Choice.step:\n                return this.selectedSteps.every(\n                    (item) => item.selected === true\n                )\n            default:\n                return false\n        }\n    }\n\n    startTime(): void {\n        this.timeReference = new Date()\n        this.interval = setInterval(this.updateTime, 1000)\n        this.showButton = !this.showButton\n    }\n\n    updateTime = (): void => {\n        const currentTime = new Date()\n\n        const difference = currentTime.getTime() - this.timeReference.getTime() // miliseconds\n        this.minutes = Math.floor(difference / 1000 / 60) % 60\n        this.seconds = Math.floor(difference / 1000) % 60\n    }\n\n    endTime = (): void => {\n        clearInterval(this.interval)\n        this.showModal = true\n    }\n\n    onModalChanged(showModal): void {\n        this.showModal = showModal\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n\n<div class=\"container\">\n  <h1>Página de Receitas</h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-login></app-login>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiUrl: 'http://localhost:3000'\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}