{"version":3,"file":"main-es2017.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/modal/modal.component.ts","./src/app/components/modal/modal.component.html","./src/app/components/recipe-list/recipe-list.component.ts","./src/app/components/recipe-list/recipe-list.component.html","./src/app/core/services/recipe.service.ts","./src/app/pages/last-order/last-order.component.ts","./src/app/pages/last-order/last-order.component.html","./src/app/pages/recipe-detail/recipe-detail.component.ts","./src/app/pages/recipe-detail/recipe-detail.component.html","./src/app/pages/recipes/recipes.component.ts","./src/app/pages/recipes/recipes.component.html","./src/app/pages/signin/signin.component.ts","./src/app/pages/signin/signin.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LastOrderComponent } from './pages/last-order/last-order.component';\nimport { RecipeDetailComponent } from './pages/recipe-detail/recipe-detail.component';\nimport { RecipesComponent } from './pages/recipes/recipes.component';\nimport { SigninComponent } from './pages/signin/signin.component';\n\nconst routes: Routes = [\n  { path: '', component: SigninComponent },\n  { path: 'pedidos', component: LastOrderComponent },\n  { path: 'receitas', component: RecipesComponent },\n  { path: 'receitas/:slug', component: RecipeDetailComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend-v2';\n}\n","<!-- <mat-icon>data_usage</mat-icon> -->\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HeaderComponent } from './components/header/header.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { LastOrderComponent } from './pages/last-order/last-order.component';\nimport { RecipeListComponent } from './components/recipe-list/recipe-list.component';\nimport { RecipesComponent } from './pages/recipes/recipes.component';\nimport { RecipeDetailComponent } from './pages/recipe-detail/recipe-detail.component';\nimport { ModalComponent } from './components/modal/modal.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LoginComponent,\n    SigninComponent,\n    LastOrderComponent,\n    RecipeListComponent,\n    RecipesComponent,\n    RecipeDetailComponent,\n    ModalComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { RecipeService } from '@core/services/recipe.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit {\n  search: string = '';\n  imgSrc: string = '../../assets/img/logo-coco-bambu-mini.png';\n\n  constructor(private recipeService: RecipeService) {}\n\n  ngOnInit(): void {\n    // this.search = this.recipeService.getSearch();\n  }\n\n  onChangeInput() {\n    this.recipeService.setSearch(this.search);\n  }\n}\n","<div class=\"container\">\n  <header>\n    <img [src]=\"imgSrc\" alt=\"Logo coco bambu\" />\n    <form (submit)=\"onChangeInput()\">\n      <input\n        type=\"text\"\n        class=\"search\"\n        name=\"searchRecipes\"\n        placeholder=\"Buscar receita...\"\n        [(ngModel)]=\"search\"\n        (input)=\"onChangeInput()\"\n      />\n    </form>\n    <h1></h1>\n    <nav>\n      <ul>\n        <li>\n          <a routerLink=\"/pedidos\" routerLinkActive=\"active\">\n            <mat-icon>data_usage</mat-icon>\n            Pedidos\n          </a>\n        </li>\n        <li>\n          <a routerLink=\"/receitas\" routerLinkActive=\"active\">\n            <mat-icon>restaurant_menu </mat-icon>\n            Receitas\n          </a>\n        </li>\n        <li>\n          <a routerLink=\"/\">\n            <mat-icon>clear</mat-icon>\n            Sair\n          </a>\n        </li>\n      </ul>\n    </nav>\n  </header>\n</div>\n<br />\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  submitted: boolean = false;\n  valid: { username: boolean; password: boolean } = {\n    username: true,\n    password: true,\n  };\n\n  constructor(private router: Router) {}\n\n  onLoginSubmit(form: NgForm): void {\n    this.submitted = true;\n    const username = form.value.username;\n    const password = form.value.password;\n    // console.log(form);\n    if (username !== 'admin') {\n      this.valid.username = false;\n    }\n    if (password !== 'admin') {\n      this.valid.password = false;\n    }\n    if (username === 'admin' && password === 'admin') {\n      this.router.navigate(['pedidos']);\n    }\n  }\n\n  onChangeInput(): void {\n    this.valid.username = true;\n    this.valid.password = true;\n  }\n\n  ngOnInit(): void {}\n}\n","<main>\n  <div class=\"container\">\n    <section class=\"notification\">\n      <div class=\"order\">\n        <span class=\"number\">1</span>\n        <span class=\"number--message\">Novo pedido</span>\n      </div>\n      <span class=\"info-message\">\n        Por favor, faça o login para ver o pedido e ter acesso a receita com o\n        modo de preparo.\n      </span>\n    </section>\n    <div class=\"logo\">\n      <img src=\"../../../assets/img/logo-coco-bambu.png\" alt=\"\" />\n    </div>\n    <form (ngSubmit)=\"onLoginSubmit(loginForm)\" #loginForm=\"ngForm\">\n      <input\n        type=\"text\"\n        id=\"username\"\n        placeholder=\"Nome do usuário\"\n        ngModel\n        name=\"username\"\n        #username=\"ngModel\"\n        required\n        (input)=\"onChangeInput()\"\n      />\n\n      <span\n        class=\"error\"\n        *ngIf=\"username.invalid && (username.dirty || username.touched)\"\n        >{{ \"Por favor, entre com um usuário.\" }}</span\n      >\n\n      <span class=\"error\" *ngIf=\"!valid.username\">{{\n        \"Usuário incorreto.\"\n      }}</span>\n\n      <input\n        type=\"password\"\n        id=\"password\"\n        placeholder=\"Senha\"\n        required\n        ngModel\n        name=\"password\"\n        #password=\"ngModel\"\n      />\n      <span\n        class=\"error\"\n        *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n        >{{ \"Por favor, entre com uma senha.\" }}</span\n      >\n      <button type=\"submit\" [disabled]=\"!loginForm.valid\">Acessar</button>\n    </form>\n  </div>\n</main>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css'],\n})\nexport class ModalComponent implements OnInit {\n  @Input()\n  minutes = 0;\n\n  @Input()\n  seconds = 0;\n\n  @Input()\n  showModal = false;\n\n  @Output()\n  showModalChange = new EventEmitter<boolean>();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  closeModal = (): void => {\n    this.showModal = false;\n    this.showModalChange.emit(this.showModal);\n  };\n}\n","<div class=\"modal-container\" *ngIf=\"showModal\">\n  <div class=\"modal\">\n    <h3>Obrigado</h3>\n    <p>\n      Prato finalizado com sucesso <br />\n      em {{ minutes }} minutos e {{ seconds }} segundos!\n    </p>\n    <div (click)=\"closeModal()\" class=\"X-button\">\n      <img src=\"../../../assets/img/icon-close.png\" alt=\"\" srcset=\"\" />\n    </div>\n\n    <button (click)=\"closeModal()\">Ok</button>\n  </div>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core'\nimport { RecipeService } from '@core/services/recipe.service'\nimport { environment } from 'environments/environment'\nimport { Subscription } from 'rxjs'\nimport { Recipe } from './recipe.model'\n\nconst BACKEND_URL = environment.apiUrl\n\n@Component({\n    selector: 'app-recipe-list',\n    templateUrl: './recipe-list.component.html',\n    styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit, OnDestroy {\n    BACKEND_URL = BACKEND_URL\n    private searchSub: Subscription = new Subscription()\n    private recipeSub: Subscription = new Subscription()\n    recipes: Recipe[] = []\n    frecipes: Recipe[] = []\n    constructor(private recipeService: RecipeService) {}\n\n    ngOnInit(): void {\n        this.recipeService.getRecipes()\n        this.recipeSub = this.recipeService\n            .getRecipesListener()\n            .subscribe((recipes: Recipe[]) => {\n                this.recipes = recipes\n                this.frecipes = recipes\n            })\n\n        this.searchSub = this.recipeService\n            .getSearchListener()\n            .subscribe((search: string) => {\n                this.filterRecipes(search)\n            })\n    }\n\n    ngOnDestroy(): void {\n        this.searchSub.unsubscribe()\n        this.recipeSub.unsubscribe()\n    }\n\n    filterRecipes(search: string) {\n        this.frecipes = this.recipes.filter(({ name }) =>\n            name.toLowerCase().includes(search)\n        )\n    }\n\n    getLengthFilteredRecipes() {\n        return this.recipes.length\n    }\n}\n","<!-- <section *ngFor=\"let recipe of recipes\" class=\"wrapper\"> -->\n\n<a\n    [routerLink]=\"['/receitas', recipe.slug]\"\n    class=\"wrapper\"\n    *ngFor=\"let recipe of frecipes\"\n>\n    <div class=\"img\">\n        <img src=\"{{ BACKEND_URL }}/{{ recipe.pictures.thumb }}\" alt=\"Imagem\" />\n        <!-- Imagem <img src=\"../../assets/img/prato-arroz-\" alt=\"\" /> -->\n    </div>\n    <div class=\"\">\n        <h1 class=\"title\">{{ recipe.name }}</h1>\n        <p class=\"description\">\n            {{ recipe.description }}\n        </p>\n    </div>\n    <div class=\"circle prato\" *ngIf=\"recipe.finished\">Prato Finalizado</div>\n    <div class=\"circle prato\" *ngIf=\"!recipe.finished\"></div>\n    <div class=\"circle tempo\">\n        <span>Hoje</span>\n        <span>19:32</span>\n    </div>\n    <div class=\"circle receita\">\n        <span>Ver</span>\n        <span>Receita</span>\n    </div>\n</a>\n<!-- </section> -->\n","import { Injectable } from '@angular/core'\nimport { Recipe } from 'app/components/recipe-list/recipe.model'\nimport { Subject } from 'rxjs'\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from 'environments/environment'\n\nconst BACKEND_URL = environment.apiUrl\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RecipeService {\n    private recipes: Recipe[] = []\n    // private recipe: Recipe = {}\n    private recipesUpdated = new Subject<Recipe[]>()\n    private search = new Subject<string>()\n\n    constructor(private http: HttpClient) {}\n\n    getRecipes() {\n        this.http\n            .get<Recipe[]>(`${BACKEND_URL}/recipes`)\n            .subscribe((recipes) => {\n                this.recipes = recipes\n                this.recipesUpdated.next([...this.recipes])\n            })\n    }\n\n    getRecipesListener() {\n        return this.recipesUpdated.asObservable()\n    }\n\n    getLength() {\n        return this.recipes.length\n    }\n\n    setSearch(search: string) {\n        this.search.next(search)\n    }\n\n    getSearchListener() {\n        return this.search.asObservable()\n    }\n\n    getRecipeBySlug(_slug: string) {\n        return this.http\n            .get<Recipe>(`${BACKEND_URL}/recipes/${_slug}`)\n            .toPromise()\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Event } from '@angular/router';\n\n@Component({\n  selector: 'app-last-order',\n  templateUrl: './last-order.component.html',\n  styleUrls: ['./last-order.component.css'],\n})\nexport class LastOrderComponent implements OnInit {\n  search = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onSearchRecipes(search: any) {\n    this.search = search;\n  }\n}\n","<app-header></app-header>\n\n<div class=\"container\">\n  <h1>Últimos pedidos</h1>\n  <app-recipe-list></app-recipe-list>\n</div>\n","import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { RecipeService } from '@core/services/recipe.service'\nimport { Recipe } from 'app/components/recipe-list/recipe.model'\nimport { environment } from 'environments/environment'\n\ninterface SelectedItems {\n    id: string\n    selected: boolean\n}\n\nenum Choice {\n    ingredient,\n    step\n}\n\nconst BACKEND_URL = environment.apiUrl\n\n@Component({\n    selector: 'app-recipe-detail',\n    templateUrl: './recipe-detail.component.html',\n    styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n    BACKEND_URL = BACKEND_URL\n    recipe: Recipe\n    selectedIngredients: SelectedItems[] = []\n    selectedSteps: SelectedItems[] = []\n    checkedIngredients = false\n    checkedSteps = false\n    showButton = true\n    timeReference = new Date()\n    interval\n    minutes = 0\n    seconds = 0\n    showModal = false\n    status = 0\n    constructor(\n        private recipeService: RecipeService,\n        private route: ActivatedRoute\n    ) {}\n\n    async ngOnInit() {\n        this.recipeService.getRecipes()\n        const slug = this.route.snapshot.params.slug\n        this.recipe = await this.recipeService.getRecipeBySlug(slug)\n        this.recipe = {\n            ...this.recipe,\n            time: this.recipe.time / 60000\n        }\n        this.selectedIngredients = this.fillArray(\n            this.recipe.ingredients.length\n        )\n        this.selectedSteps = this.fillArray(this.recipe.steps.length)\n    }\n\n    private fillArray(length: number) {\n        return Array(length)\n            .fill({ idx: '0', selected: false })\n            .map((_, idx) => ({ id: String(idx), selected: false }))\n    }\n\n    onChangeItems($event) {\n        const id = $event.target.value\n        const isChecked = $event.target.checked\n        let findItem\n        if ($event.target.id.includes('ingredient')) {\n            findItem = this.selectedIngredients.find((item) => item.id === id)\n            findItem.selected = isChecked\n            this.checkedIngredients = this.verifyAllItems(Choice.ingredient)\n        } else {\n            findItem = this.selectedSteps.find((item) => item.id === id)\n            findItem.selected = isChecked\n            this.status = this.onChangeStatus(this.selectedSteps)\n            this.checkedSteps = this.verifyAllItems(Choice.step)\n        }\n    }\n\n    private onChangeStatus(items: SelectedItems[]) {\n        const total = items.reduce((acc, item) => {\n            if (item.selected) {\n                acc++\n            }\n            return acc\n        }, 0)\n        return Math.round((total / items.length) * 100)\n    }\n\n    verifyAllItems(choice: Choice): boolean {\n        switch (choice) {\n            case Choice.ingredient:\n                return this.selectedIngredients.every(\n                    (item) => item.selected === true\n                )\n            case Choice.step:\n                return this.selectedSteps.every(\n                    (item) => item.selected === true\n                )\n            default:\n                return false\n        }\n    }\n\n    startTime(): void {\n        this.timeReference = new Date()\n        this.interval = setInterval(this.updateTime, 1000)\n        this.showButton = !this.showButton\n    }\n\n    updateTime = (): void => {\n        const currentTime = new Date()\n\n        const difference = currentTime.getTime() - this.timeReference.getTime() // miliseconds\n        this.minutes = Math.floor(difference / 1000 / 60) % 60\n        this.seconds = Math.floor(difference / 1000) % 60\n    }\n\n    endTime = (): void => {\n        clearInterval(this.interval)\n        this.showModal = true\n    }\n\n    onModalChanged(showModal): void {\n        this.showModal = showModal\n    }\n}\n","<main class=\"container\" *ngIf=\"recipe\">\n    <section class=\"hero\">\n        <a routerLink=\"/pedidos\">\n            <div class=\"goBack\">\n                <img src=\"../../assets/img/icon-back.png\" alt=\"\" />\n                <span class=\"goBack--text\">Voltar</span>\n            </div>\n        </a>\n\n        <div class=\"tempoDePreparo\">\n            <img src=\"../../assets/img/icon-time.png\" alt=\"\" />\n            <div class=\"tempoDePreparo--info\">\n                <p>Tempo de preparo</p>\n                <span class=\"tempoDePreparo--time\"\n                    >{{ recipe.time }} minutos</span\n                >\n            </div>\n        </div>\n        <img\n            src=\"{{ BACKEND_URL }}/{{ recipe.pictures.hero }}\"\n            alt=\"{{ recipe.name }}\"\n        />\n        <div class=\"info\">\n            <h1>{{ recipe.name }}</h1>\n            <p>{{ recipe.description }}</p>\n        </div>\n    </section>\n\n    <section class=\"ingredients\">\n        <h1>Ingredientes</h1>\n        <ul class=\"ingredients--list\">\n            <ng-container\n                *ngFor=\"let ingredient of recipe.ingredients; index as idx\"\n            >\n                <li class=\"ingredients--list-item\">\n                    <input\n                        class=\"checkbox-circle\"\n                        type=\"checkbox\"\n                        [value]=\"idx\"\n                        id=\"ingredient_{{ idx }}\"\n                        (change)=\"onChangeItems($event)\"\n                    />\n                    <label class=\"checkbox-label\" for=\"ingredient_{{ idx }}\">\n                        {{ ingredient }}\n                    </label>\n                </li>\n            </ng-container>\n        </ul>\n    </section>\n\n    <section class=\"modo-de-preparo\">\n        <h1>Modo de Preparo</h1>\n        <ol class=\"modo-de-preparo--list\">\n            <ng-container *ngFor=\"let step of recipe.steps; index as idx\">\n                <li class=\"modo-de-preparo--list-item\">\n                    <input\n                        class=\"checkbox-circle\"\n                        type=\"checkbox\"\n                        [value]=\"idx\"\n                        id=\"step_{{ idx }}\"\n                        (change)=\"onChangeItems($event)\"\n                    />\n                    <label class=\"checkbox-label row\" for=\"step_{{ idx }}\">\n                        <div>\n                            <strong>Passo {{ idx + 1 }}</strong>\n                            <br />\n                            {{ step }}\n                        </div>\n                    </label>\n                </li>\n            </ng-container>\n        </ol>\n    </section>\n\n    <footer>\n        <div class=\"status\">\n            Status <strong>{{ status }}%</strong> pronto e <br />\n            {{ minutes }} minuto(s) {{ seconds }} segundo(s) utilizado(s)\n        </div>\n        <ng-container *ngIf=\"showButton\">\n            <button [disabled]=\"!checkedIngredients\" (click)=\"startTime()\">\n                Iniciar Preparação\n            </button>\n        </ng-container>\n\n        <ng-container *ngIf=\"!showButton\">\n            <button [disabled]=\"!checkedSteps\" (click)=\"endTime()\">\n                Finalizar\n            </button>\n        </ng-container>\n    </footer>\n\n    <app-modal\n        [minutes]=\"minutes\"\n        [seconds]=\"seconds\"\n        [showModal]=\"showModal\"\n        (showModalChange)=\"onModalChanged($event)\"\n    ></app-modal>\n</main>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n\n<div class=\"container\">\n  <h1>Página de Receitas</h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-login></app-login>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiUrl: 'http://localhost:3000'\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["environment","i0","ctx_r0","Choice","BACKEND_URL","apiUrl","RecipeDetailComponent","constructor","recipeService","route","Date","currentTime","difference","getTime","timeReference","minutes","Math","floor","seconds","clearInterval","interval","showModal","ngOnInit","getRecipes","slug","snapshot","params","recipe","getRecipeBySlug","Object","time","selectedIngredients","fillArray","ingredients","length","selectedSteps","steps","Array","fill","idx","selected","map","_","id","String","onChangeItems","$event","target","value","isChecked","checked","findItem","includes","find","item","checkedIngredients","verifyAllItems","ingredient","status","onChangeStatus","checkedSteps","step","items","total","reduce","acc","round","choice","every","startTime","setInterval","updateTime","showButton","onModalChanged","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///"}